
@{
    /**/

    ViewBag.Title = "ThirdMission";
}

<!DOCTYPE html>
<html>
<head>
    <style>

        html
        body {
            background-image: url("/export-map-share.png");
            background-attachment: fixed;
            background-size: 100% 100%;
            background-position: center center;
        }

        canvas {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
        }

        * {
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <canvas id="myCanvas"></canvas>
    <script>
        // this script takes care for both : saving a path of 10 sec (or other inputed time) of the plane
        // and presenting the path on the map
        var IntervalTime = @Session["time"] * 1000
        var canvas = document.getElementById("myCanvas");
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        var ctx = canvas.getContext("2d");
        ctx.lineWidth = '4';
        ctx.strokeStyle = "green";
        ctx.fillStyle = "red";
        ctx.beginPath();
        var lon = (@ViewBag.lon + 180) * (canvas.width / 360);
        var lat = (@ViewBag.lat + 90) * (canvas.height / 180);
        ctx.arc(lon, lat, 7, 0, 2 * Math.PI);
        ctx.fill();
        ctx.stroke();

        window.onbeforeunload = function () {
            $.post("@Url.Action("CloseServer")");
        };

        endPoints = [];
        myTimer = (function () {
           $.post("@Url.Action("createFile")").done(function (xml) {
                var xmlDoc = $.parseXML(xml);
                $xml = $(xmlDoc);
                Lon = ((parseFloat($xml.find("Lon").text())) + 180) * (canvas.width / 360);
                Lat = ((parseFloat($xml.find("Lat").text())) + 90) * (canvas.height / 180);
                endPoints.push({ x: Lon, y: Lat });
                ctx.beginPath();
                ctx.moveTo(lon, lat);
                for (var i = 1; i < endPoints.length; i++) {
                    ctx.lineTo(endPoints[i].x, endPoints[i].y);
                    ctx.strokeStyle = "red";
                    ctx.stroke();
                }
            });
         });


        endTimer = (function () {
            clearInterval(endTimerInterval);
        });

        setTimeout(endTimer, (@Session["sec"] * 1000));
        var endTimerInterval = setInterval(myTimer, IntervalTime);
        myTimer();


    </script>
</body>
</html>
